---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: radarr
  namespace: radarr
spec:
  interval: 15m
  chart:
    spec:
      chart: radarr
      version: 23.19.0
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
  timeout: 20m
  maxHistory: 3
  driftDetection:
    mode: warn
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    TZ: America/Montreal
    global:
      stopAll: false
    
    credentials:
      backblaze:
        type: s3
        url: ${BUCKET_URL}
        bucket: ${BUCKET_NAME}
        accessKey: ${BUCKET_ACCESSKEY}
        secretKey: ${BUCKET_SECRETKEY}
        encrKey: ${BUCKET_ENCRKEY}

    # mergerfsImage:
    #   repository: hvalev/mergerfs
    #   pullPolicy: IfNotPresent
    #   tag: 2.40.2.1@sha256:15375ac6e1646d86ffd7c2cea380dc7dfba6a07a1e8d2bc84629d67b0044f90d

    # mergerfsImage:
    #   repository: ghcr.io/hotio/mergerfs
    #   pullPolicy: IfNotPresent
    #   tag: latest@sha256:29fc79d0d4f914962eb184738ee4bba7227f4e4cfae8b4647407025f94f0bcbe

    ingress:
      main:
        enabled: true
        integrations:
          traefik:
            enabled: true
            middlewares:
              - name: auth
                namespace: traefik
              - name: theme-radarr
                namespace: traefik
        tls:
          - hosts:
            - radarr.${DOMAIN_0}
            clusterIssuer: domain-0-wildcard
            secretName: certificate-issuer-domain-0-wildcard
        hosts:
          - host: radarr.${DOMAIN_0}

    persistence:
      config:
        volsync:
          - name: cfg
            type: restic
            cleanupCachePVC: true
            credentials: backblaze
            dest:
              enabled: true
            src:
              enabled: true
              trigger:
                schedule: 0 5 * * *
      media:
        enabled: true
        type: pvc
        claimName: mergerfs-merged-pvc
        mountPath: /media
        mountPropagation: Bidirectional
        targetSelectAll: true
      # media:
      #   enabled: true
      #   type: nfs
      #   # mountPath: /media
      #   server: ${NFS_SERVER_0}
      #   path: ${DATASET_MEDIA}
      #   targetSelector:
      #     main:
      #       mergerfs:
      #         mountPath: /disks/media
      # overseerr:
      #   enabled: true
      #   type: nfs
      #   # mountPath: /overseerr
      #   server: ${NFS_SERVER_0}
      #   path: ${DATASET_OVERSEERR}
      #   targetSelector:
      #     main:
      #       mergerfs:
      #         mountPath: /disks/overseerr
      # merged:
      #   enabled: true
      #   type: emptyDir
      #   mountPath: /merged
      #   mountPropagation: Bidirectional
      #   targetSelectAll: true

    # workload:
    #   main:
    #     podSpec:
    #       containers:
    #         mergerfs:
    #           enabled: true
    #           primary: false
    #           securityContext:
    #             privileged: true
    #             readOnlyRootFilesystem: false
    #             runAsUser: 0
    #             capabilities:
    #               add:
    #                 - SYS_ADMIN
    #           imageSelector: mergerfsImage
    #           env:
    #             MERGERFS_PARAMS: "moveonenospc=true,dropcacheonclose=true,category.create=epmfs,cache.files=partial"
    #           probes:
    #             liveness:
    #               enabled: false
    #             readiness:
    #               enabled: false
    #             startup:
    #               enabled: false