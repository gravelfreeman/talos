---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: radarr
  namespace: radarr
spec:
  interval: 15m
  chart:
    spec:
      chart: radarr
      version: 23.19.0
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
  timeout: 20m
  maxHistory: 3
  driftDetection:
    mode: warn
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    TZ: America/Montreal
    global:
      stopAll: false
    
    credentials:
      backblaze:
        type: s3
        url: ${BUCKET_URL}
        bucket: ${BUCKET_NAME}
        accessKey: ${BUCKET_ACCESSKEY}
        secretKey: ${BUCKET_SECRETKEY}
        encrKey: ${BUCKET_ENCRKEY}

    mergerfsImage:
      repository: hvalev/mergerfs
      pullPolicy: IfNotPresent
      tag: 2.40.2.1@sha256:9cefd1580f4a260bdbaebec1761ea8152ba74ad57d9b05c989a1478a23a387c8

    ingress:
      main:
        enabled: true
        integrations:
          traefik:
            enabled: true
            middlewares:
              - name: auth
                namespace: traefik
              - name: theme-radarr
                namespace: traefik
        tls:
          - hosts:
            - radarr.${DOMAIN_0}
            clusterIssuer: domain-0-wildcard
            secretName: certificate-issuer-domain-0-wildcard
        hosts:
          - host: radarr.${DOMAIN_0}

    persistence:
      config:
        volsync:
          - name: cfg
            type: restic
            cleanupCachePVC: true
            credentials: backblaze
            dest:
              enabled: true
            src:
              enabled: true
              trigger:
                schedule: 0 5 * * *
      media:
        enabled: true
        type: nfs
        # mountPath: /media
        server: ${NFS_SERVER_0}
        path: ${DATASET_MEDIA}
        targetSelector:
          main:
            mergerfs:
              mountPath: /disks/media
      overseerr:
        enabled: true
        type: nfs
        # mountPath: /overseerr
        server: ${NFS_SERVER_0}
        path: ${DATASET_OVERSEERR}
        targetSelector:
          main:
            mergerfs:
              mountPath: /disks/overseerr
      merged:
        enabled: true
        type: pvc
        mountPath: /media
        targetSelectAll: true

    workload:
      main:
        podSpec:
          containers:
            mergerfs:
              enabled: true
              primary: false
              securityContext:
                # privileged: true
                # runAsNonRoot: false
                readOnlyRootFilesystem: false
                runAsUser: 0
                runAsGroup: 0
                capabilities:
                  add:
                    - SYS_ADMIN
              imageSelector: mergerfsImage
              env:
                MERGERFS_PARAMS: "moveonenospc=true,dropcacheonclose=true,category.create=epmfs,cache.files=partial"
              args: ["/disks/*", "/media"]
              probes:
                liveness:
                  enabled: false
                readiness:
                  enabled: false
                startup:
                  enabled: false