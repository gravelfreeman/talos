---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: pinchflat
  namespace: pinchflat
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 14.5.3
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    TZ: America/Montreal
    global:
      stopAll: false
    credentials:
      backblaze:
        type: s3
        url: ${BUCKET_URL}
        bucket: ${BUCKET_NAME}
        accessKey: ${BUCKET_ACCESSKEY}
        secretKey: ${BUCKET_SECRETKEY}
        encrKey: ${BUCKET_ENCRKEY}

    image:
      repository: ghcr.io/kieraneglin/pinchflat
      tag: latest@sha256:06e20be2ad935f1ee2b527f99d1492086d7b82713739abf016e46632992079ec
      pullPolicy: IfNotPresent

    securityContext:
      container:
        runAsUser: 568
        runAsGroup: 568
        readOnlyRootFilesystem: false
        allowPrivilegeEscalation: false
        privileged: false
        seccompProfile:
          type: RuntimeDefault
        capabilities:
          add: []
          drop:
            - ALL
          disableS6Caps: false
        PUID: 568
        UMASK: "0022"
      pod:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: []
        sysctls: []

    workload:
      main:
        enabled: true
        primary: true
        type: Deployment
        dbWait: true
        podSpec:
          containers:
            main:
              env:
                YT_DLP_WORKER_CONCURRENCY: "1"            
              probes:
                liveness:
                  enabled: true
                  type: "{{ .Values.service.main.ports.main.protocol }}"
                  port: "{{ $.Values.service.main.ports.main.targetPort | default .Values.service.main.ports.main.port }}"
                readiness:
                  enabled: true
                  type: "{{ .Values.service.main.ports.main.protocol }}"
                  port: "{{ $.Values.service.main.ports.main.targetPort | default .Values.service.main.ports.main.port }}"
                startup:
                  enabled: true
                  type: "{{ .Values.service.main.ports.main.protocol }}"
                  port: "{{ $.Values.service.main.ports.main.targetPort | default .Values.service.main.ports.main.port }}"

    service:
      main:
        ports:
          main:
            port: 8945

    ingress:
      main:
        enabled: true
        integrations:
          traefik:
            enabled: true
            middlewares:
              - name: auth
                namespace: traefik
        tls:
          - hosts:
            - pinchflat.${DOMAIN_0}
            clusterIssuer: domain-0-wildcard
            secretName: certificate-issuer-domain-0-wildcard
        hosts:
          - host: pinchflat.${DOMAIN_0}

    persistence:
      config:
        enabled: true
        type: pvc
        mountPath: /config
        targetSelectAll: true
        volsync:
          - name: cfg
            type: restic
            cleanupCachePVC: true
            credentials: backblaze
            dest:
              enabled: true
            src:
              enabled: true
              trigger:
                schedule: 0 5 * * *
      downloads:
        enabled: true
        type: nfs
        mountPath: /downloads
        server: ${NFS_SERVER_0}
        path: ${DATASET_MEDIA}/archive/youtube