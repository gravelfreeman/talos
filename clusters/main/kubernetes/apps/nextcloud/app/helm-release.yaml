apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: nextcloud
  namespace: nextcloud
spec:
  interval: 15m
  chart:
    spec:
      chart: nextcloud
      version: 30.1.25
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
  values:
    clamavImage:
      repository: clamav/clamav
      tag: 1.3.1@sha256:94ccfcc8b6f52c5279a5d01253d57595927dedb25e89a066aa7c043866ec41b4
    cnpg:
      main:
        backups:
          credentials: backblaze
          enabled: true
        cluster:
          instances: 1
          singleNode: true
        database: nextcloud
        enabled: true
        monitoring:
          disableDefaultQueries: false
          enablePodMonitor: true
        password: ${CNPG_PASSWORD_NEXTCLOUD}
        pgVersion: 16
        user: nextcloud
    collaboraImage:
      repository: collabora/code
      tag: 24.04.3.1.1@sha256:8d4759b5dc9ac6a7c943caf20765fafa8519a8a91579a29a02bad28b8ab35fcd
    credentials:
      backblaze:
        accessKey: ${BUCKET_ACCESSKEY}
        bucket: ${BUCKET_NAME}
        encrKey: ${BUCKET_ENCRKEY}
        name: backblaze
        path: ""
        secretKey: ${BUCKET_SECRETKEY}
        type: s3
        url: ${BUCKET_URL}
    cronjobs:
      - cmd:
        - echo "Running [php -f /var/www/html/cron.php] ..."
        - php -f /var/www/html/cron.php
        - echo "Finished [php -f /var/www/html/cron.php]"
        enabled: true
        name: nextcloud-cron
        schedule: '*/5 * * * *'
      - cmd:
        - echo "Running [occ preview:pre-generate] ..."
        - occ preview:pre-generate
        - echo "Finished [occ preview:pre-generate]"
        enabled: '{{ .Values.nextcloud.previews.cron }}'
        name: preview-cron
        schedule: '{{ .Values.nextcloud.previews.schedule }}'
    hpbImage:
      repository: tccr.io/tccr/nextcloud-push-notify
      tag: v0.6.12@sha256:5c0b2fa23cce532ca2ed97abfe98287023a6d16369a7499ea8a03959969e9f10
    imaginaryImage:
      repository: tccr.io/tccr/nextcloud-imaginary
      tag: v20230401@sha256:3ee40a5bcea3266612070df7243704b35db77948494f4725595f1eb41270e266
    ingress:
      main:
        enabled: true
        integrations:
          traefik:
            enabled: true
          middlewares:
            - name: auth
        tls:
          - hosts:
            - cloud.${DOMAIN_0}
            clusterIssuer: domain-0-wildcard
        hosts:
          - host: cloud.${DOMAIN_0}
            paths:
            - path: /
              pathType: Prefix
    nextcloud:
      clamav:
        enabled: true
        file_max_size: -1
        infected_action: only_log
        stream_max_length: 1.048576e+08
      collabora:
        dictionaries:
          - en_US
          - fr_FR
        enabled: true
        interface_mode: default
        password: XTt8-M2-i@*DBsieCg9szc7f
        username: ${USER_10}
      credentials:
        initialAdminPassword: XTt8-M2-i@*DBsieCg9szc7f
        initialAdminUser: ${USER_10}
      expirations:
        activity_expire_days: 90
        trash_retention_obligation: auto
        versions_retention_obligation: auto
      files:
        max_chunk_size: 1.048576e+07
        shared_folder_name: Partage
      general:
        accessIP: 10.0.10.13
        default_phone_region: CA
        force_enable_allow_local_remote_servers: false
        run_optimize: true
      logging:
        log_audit_file: /var/www/html/data/logs/audit.log
        log_date_format: d/m/Y H:i:s
        log_file: /var/www/html/data/logs/nextcloud.log
        log_level: 2
      notify_push:
        enabled: true
      onlyoffice:
        enabled: false
        internal_url: ""
        jwt: ""
        jwt_header: Authorization
        url: ""
        verify_ssl: true
      opcache:
        interned_strings_buffer: 32
        jit_buffer_size: 128
        max_accelerated_files: 10000
        memory_consumption: 128
        revalidate_freq: 60
      php:
        memory_limit: 1G
        pm_max_children: 180
        pm_max_spare_servers: 30
        pm_min_spare_servers: 12
        pm_start_servers: 18
        upload_limit: 10G
      previews:
        cron: true
        enabled: true
        height_sizes: "256"
        imaginary: true
        jpeg_quality: 60
        max_allowed_resolution: "18.0"
        max_file_size_image: 50
        max_memory: 1024
        max_x: 2048
        max_y: 2048
        providers:
          - BMP
          - GIF
          - JPEG
          - Krita
          - MarkDown
          - MP3
          - OpenDocument
          - PNG
          - TXT
          - XBitmap
        schedule: '*/30 * * * *'
        square_sizes: 32 256
        width_sizes: 256 384
    nginxImage:
      repository: nginxinc/nginx-unprivileged
      tag: 1.26.0@sha256:2f9cdab1fb340a6c1908366654c4d6b19d58286a46635eb034a53fc61b44c34d
    persistence:
      config:
        enabled: true
        targetSelector:
          main:
            main:
              mountPath: /var/www/html/config
          nextcloud-cron:
            nextcloud-cron:
              mountPath: /var/www/html/config
          nginx:
            nginx:
              mountPath: /var/www/html/config
              readOnly: true
          notify:
            notify:
              mountPath: /var/www/html/config
              readOnly: true
          preview-cron:
            preview-cron:
              mountPath: /var/www/html/config
        volsync:
          - credentials: backblaze
            name: cfg
            src:
              enabled: true
            type: restic
      data:
        enabled: true
        type: nfs
        path: ${DATASET_CLOUD}
        server: ${NFS_SERVER_0}
        targetSelector:
          main:
            init-perms:
              mountPath: /var/www/html/data
            main:
              mountPath: /var/www/html/data
          nextcloud-cron:
            nextcloud-cron:
              mountPath: /var/www/html/data
          nginx:
            nginx:
              mountPath: /var/www/html/data
              readOnly: true
          preview-cron:
            preview-cron:
              mountPath: /var/www/html/data
      html:
        enabled: true
        targetSelector:
          main:
            main:
              mountPath: /var/www/html
          nextcloud-cron:
            nextcloud-cron:
              mountPath: /var/www/html
          nginx:
            nginx:
              mountPath: /var/www/html
              readOnly: true
          preview-cron:
            preview-cron:
              mountPath: /var/www/html
        volsync:
          - credentials: backblaze
            name: htm
            src:
              enabled: true
            type: restic
      nginx:
        enabled: true
        objectName: nginx-config
        targetSelector:
          nginx:
            nginx:
              mountPath: /etc/nginx/nginx.conf
              readOnly: true
              subPath: nginx.conf
        type: configmap
      nginx-temp:
        enabled: true
        targetSelector:
          nginx:
            nginx:
              mountPath: /tmp/nginx
        type: emptyDir
      opcache-recommended:
        enabled: true
        objectName: opcache
        targetSelector:
          main:
            main:
              mountPath: /usr/local/etc/php/conf.d/opcache-recommended.ini
              readOnly: true
              subPath: opcache-recommended.ini
        type: configmap
      php-tune:
        enabled: true
        objectName: php-tune
        targetSelector:
          main:
            main:
              mountPath: /usr/local/etc/php-fpm.d/zz-tune.conf
              readOnly: true
              subPath: zz-tune.conf
        type: configmap
      redis-session:
        enabled: true
        objectName: redis-session
        targetSelector:
          main:
            main:
              mountPath: /usr/local/etc/php/conf.d/redis-session.ini
              readOnly: true
              subPath: redis-session.ini
        type: configmap
    redis:
      enabled: true
      username: default
    securityContext:
      container:
        UMASK: "0022"
        runAsGroup: 568
        runAsUser: 568
      pod:
        fsGroupChangePolicy: OnRootMismatch
    service:
      clamav:
        enabled: true
        ports:
          clamav:
            enabled: true
            port: 3310
            targetPort: 3310
            targetSelector: clamav
        targetSelector: clamav
      collabora:
        enabled: true
        ports:
          collabora:
            enabled: true
            port: 9980
            targetPort: 9980
            targetSelector: collabora
        targetSelector: collabora
      imaginary:
        enabled: true
        ports:
          imaginary:
            enabled: true
            port: 9090
            targetSelector: imaginary
        targetSelector: imaginary
      main:
        ports:
          main:
            port: 8080
            targetSelector: nginx
        targetSelector: nginx
      nextcloud:
        enabled: true
        ports:
          nextcloud:
            enabled: true
            port: 9000
            targetPort: 9000
            targetSelector: main
        targetSelector: main
      notify:
        enabled: true
        ports:
          metrics:
            enabled: true
            port: 7868
            targetSelector: notify
          notify:
            enabled: true
            port: 7867
            primary: true
            targetPort: 7867
            targetSelector: notify
        targetSelector: notify
    updated: true
    workload:
      clamav:
        enabled: true
        podSpec:
          containers:
            clamav:
              enabled: true
              envFrom:
                - configMapRef:
                  name: clamav-config
              imageSelector: clamavImage
              primary: true
              probes:
                liveness:
                  command: clamdcheck.sh
                  enabled: true
                  type: exec
                readiness:
                  command: clamdcheck.sh
                  enabled: true
                  type: exec
                startup:
                  enabled: true
                  port: '{{ .Values.service.clamav.ports.clamav.targetPort }}'
                  type: tcp
              resources:
                excludeExtra: true
              securityContext:
                readOnlyRootFilesystem: false
                runAsGroup: 0
                runAsNonRoot: false
                runAsUser: 0
        replicas: 1
        strategy: RollingUpdate
        type: Deployment
      collabora:
        enabled: true
        podSpec:
          containers:
            collabora:
              enabled: true
              envFrom:
                - configMapRef:
                  name: collabora-config
              imageSelector: collaboraImage
              primary: true
              probes:
                liveness:
                  enabled: true
                  path: /collabora/
                  port: '{{ .Values.service.collabora.ports.collabora.targetPort }}'
                  type: http
                readiness:
                  enabled: true
                  path: /collabora/
                  port: '{{ .Values.service.collabora.ports.collabora.targetPort }}'
                  type: http
                startup:
                  enabled: true
                  port: '{{ .Values.service.collabora.ports.collabora.targetPort }}'
                  type: tcp
              resources:
                excludeExtra: true
              securityContext:
                allowPrivilegeEscalation: true
                capabilities:
                  add:
                    - CHOWN
                    - FOWNER
                    - SYS_CHROOT
                    - MKNOD
                readOnlyRootFilesystem: false
                runAsGroup: 102
                runAsUser: 100
        replicas: 1
        strategy: RollingUpdate
        type: Deployment
      imaginary:
        enabled: true
        podSpec:
          containers:
            imaginary:
              args:
                - -p
                - '{{ .Values.service.imaginary.ports.imaginary.port }}'
                - -concurrency
                - "10"
                - -max-allowed-resolution
                - '{{ .Values.nextcloud.previews.max_allowed_resolution }}'
                - -enable-url-source
                - -return-size
              command: imaginary
              enabled: true
              imageSelector: imaginaryImage
              primary: true
              probes:
                liveness:
                  enabled: true
                  path: /health
                  port: '{{ .Values.service.imaginary.ports.imaginary.port }}'
                readiness:
                  enabled: true
                  path: /health
                  port: '{{ .Values.service.imaginary.ports.imaginary.port }}'
                startup:
                  enabled: true
                  port: '{{ .Values.service.imaginary.ports.imaginary.port }}'
                  type: tcp
              resources:
                excludeExtra: true
        replicas: 1
        strategy: RollingUpdate
        type: Deployment
      main:
        podSpec:
          containers:
            main:
              enabled: true
              envFrom:
                - configMapRef:
                  name: nextcloud-config
              primary: true
              probes:
                liveness:
                  command: /healthcheck.sh
                  enabled: true
                  type: exec
                readiness:
                  command: /healthcheck.sh
                  enabled: true
                  type: exec
                startup:
                  enabled: true
                  port: '{{ .Values.service.nextcloud.ports.nextcloud.targetPort }}'
                  type: tcp
        replicas: 1
        type: Deployment
      nginx:
        enabled: true
        podSpec:
          containers:
            nginx:
              enabled: true
              imageSelector: nginxImage
              primary: true
              probes:
                liveness:
                  enabled: true
                  httpHeaders:
                    Host: kube.internal.healthcheck
                  path: /robots.txt
                  port: '{{ .Values.service.main.ports.main.port }}'
                readiness:
                  enabled: true
                  httpHeaders:
                    Host: kube.internal.healthcheck
                  path: /robots.txt
                  port: '{{ .Values.service.main.ports.main.port }}'
                startup:
                  enabled: true
                  port: '{{ .Values.service.main.ports.main.port }}'
                  type: tcp
              resources:
                excludeExtra: true
        replicas: 1
        strategy: RollingUpdate
        type: Deployment
      notify:
        enabled: true
        podSpec:
          containers:
            notify:
              enabled: true
              envFrom:
                - configMapRef:
                  name: hpb-config
              imageSelector: hpbImage
              primary: true
              probes:
                liveness:
                  enabled: true
                  httpHeaders:
                    Host: kube.internal.healthcheck
                  path: /push/test/cookie
                  port: 7867
                readiness:
                  enabled: true
                  httpHeaders:
                    Host: kube.internal.healthcheck
                  path: /push/test/cookie
                  port: 7867
                startup:
                  enabled: true
                  port: 7867
                  type: tcp
              resources:
                excludeExtra: true
        replicas: 1
        strategy: RollingUpdate
        type: Deployment
