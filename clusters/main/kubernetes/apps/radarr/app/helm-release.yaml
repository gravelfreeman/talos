apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: radarr
  namespace: radarr
spec:
  interval: 15m
  chart:
    spec:
      chart: radarr
      version: 22.2.4
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
  values:
    credentials:
      backblaze:
        accessKey: ${BUCKET_ACCESSKEY}
        bucket: ${BUCKET_NAME}
        encrKey: ${BUCKET_ENCRKEY}
        name: backblaze
        path: ""
        secretKey: ${BUCKET_SECRETKEY}
        type: s3
        url: ${BUCKET_URL}
    exportarrImage:
      repository: ghcr.io/onedr0p/exportarr
      tag: v2.0.1@sha256:727e7bc8f2f0934a2117978c59f4476b954018b849a010ea6cfb380bd6539644
    ingress:
      main:
        enabled: true
        integrations:
          traefik:
            enabled: true
          middlewares:
            - name: auth
            - name: tp-radarr
        tls:
          - hosts:
            - radarr.${DOMAIN_1}
            clusterIssuer: domain-1-wildcard
        hosts:
          - host: radarr.${DOMAIN_1}
            paths:
            - path: /
              pathType: Prefix
    persistence:
      config:
        enabled: true
        targetSelector:
          exportarr:
            exportarr:
              mountPath: /config
              readOnly: true
          main:
            main:
              mountPath: /config
        volsync:
          - credentials: backblaze
            name: cfg
            src:
              enabled: true
            type: restic
      media:
        enabled: true
        type: nfs
        mountPath: /media
        path: ${DATASET_MEDIA}
        server: ${NFS_SERVER_0}
    securityContext:
      container:
        UMASK: "0022"
        runAsGroup: 568
        runAsUser: 568
      pod:
        fsGroupChangePolicy: OnRootMismatch
    service:
      main:
        enabled: true
        ports:
          main:
            port: 7878
        type: ClusterIP
      metrics:
        enabled: true
        ports:
          metrics:
            enabled: true
            port: 7879
            targetSelector: exportarr
        targetSelector: exportarr
        type: ClusterIP
    updated: true
    workload:
      exportarr:
        enabled: true
        podSpec:
          containers:
            exportarr:
              args:
                - radarr
              enabled: true
              env:
                CONFIG: /config/config.xml
                INTERFACE: 0.0.0.0
                PORT: '{{ .Values.service.metrics.ports.metrics.port }}'
                URL: '{{ printf "http://%v:%v" (include "tc.v1.common.lib.chart.names.fullname" $) .Values.service.main.ports.main.port }}'
              imageSelector: exportarrImage
              primary: true
              probes:
                liveness:
                  enabled: true
                  path: /healthz
                  port: '{{ .Values.service.metrics.ports.metrics.port }}'
                  type: http
                readiness:
                  enabled: true
                  path: /healthz
                  port: '{{ .Values.service.metrics.ports.metrics.port }}'
                  type: http
                startup:
                  enabled: true
                  path: /healthz
                  port: '{{ .Values.service.metrics.ports.metrics.port }}'
                  type: http
        replicas: 1
        strategy: RollingUpdate
        type: Deployment
      main:
        podSpec:
          containers:
            main:
              env:
                RADARR__AUTHENTICATION_METHOD: ""
                RADARR__PORT: '{{ .Values.service.main.ports.main.port }}'
              probes:
                liveness:
                  enabled: true
                  path: /ping
                  type: http
                readiness:
                  enabled: true
                  path: /ping
                  type: http
                startup:
                  enabled: true
                  path: /ping
                  type: http
        replicas: 1
        type: Deployment
