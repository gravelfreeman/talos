apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sabnzbd
  namespace: sabnzbd
spec:
  interval: 15m
  chart:
    spec:
      chart: sabnzbd
      version: 20.1.6
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
  values:
    addons:
      vpn:
        env:
          VPN_ENDPOINT_IP:
            name: VPN_ENDPOINT_IP
            value: ${VPN_ENDPOINT_IP_6}
          VPN_ENDPOINT_PORT:
            name: VPN_ENDPOINT_PORT
            value: ${VPN_ENDPOINT_PORT_6}
          VPN_SERVICE_PROVIDER:
            name: VPN_SERVICE_PROVIDER
            value: ${VPN_SERVICE_PROVIDER_0}
          VPN_TYPE:
            name: VPN_TYPE
            value: wireguard
          WIREGUARD_ADDRESSES:
            name: WIREGUARD_ADDRESSES
            value: ${WIREGUARD_ADDRESSES_6}
          WIREGUARD_PRIVATE_KEY:
            name: WIREGUARD_PRIVATE_KEY
            value: ${WIREGUARD_PRIVATE_KEY_6}
          WIREGUARD_PUBLIC_KEY:
            name: WIREGUARD_PUBLIC_KEY
            value: ${WIREGUARD_PUBLIC_KEY_6}
        excludedNetworks_IPv4:
          - ${EXCLUDED_IPV4_0}
        killSwitch: true
        type: gluetun
    credentials:
      backblaze:
        accessKey: ${BUCKET_ACCESSKEY}
        bucket: ${BUCKET_NAME}
        encrKey: ${BUCKET_ENCRKEY}
        name: backblaze
        path: ""
        secretKey: ${BUCKET_SECRETKEY}
        type: s3
        url: ${BUCKET_URL}
    exportarrImage:
      repository: ghcr.io/onedr0p/exportarr
      tag: v2.0.1@sha256:727e7bc8f2f0934a2117978c59f4476b954018b849a010ea6cfb380bd6539644
    ingress:
      main:
        enabled: true
        integrations:
          traefik:
            enabled: true
          middlewares:
            - name: auth
            - name: tp-sabnzbd
        tls:
          - hosts:
            - sabnzbd.${DOMAIN_1}
            clusterIssuer: domain-1-wildcard
        hosts:
          - host: sabnzbd.${DOMAIN_1}
            paths:
            - path: /
              pathType: Prefix
    persistence:
      config:
        enabled: true
        targetSelector:
          exportarr:
            exportarr:
              mountPath: /config
              readOnly: true
          main:
            main:
              mountPath: /config
        volsync:
          - credentials: backblaze
            name: cfg
            src:
              enabled: true
            type: restic
      media:
        enabled: true
        type: nfs
        mountPath: /media
        path: ${DATASET_MEDIA}
        server: ${NFS_SERVER_0}
    securityContext:
      container:
        UMASK: "0022"
        runAsGroup: 568
        runAsUser: 568
      pod:
        fsGroupChangePolicy: OnRootMismatch
    service:
      main:
        enabled: true
        ports:
          main:
            port: 10097
        type: ClusterIP
      metrics:
        enabled: true
        ports:
          metrics:
            enabled: true
            port: 8990
            targetSelector: exportarr
        targetSelector: exportarr
        type: ClusterIP
    workload:
      exportarr:
        enabled: '{{ .Values.metrics.main.enabled }}'
        podSpec:
          containers:
            exportarr:
              args:
                - sabnzbd
              enabled: true
              env:
                APIKEY: '{{ .Values.metrics.main.apiKey }}'
                INTERFACE: 0.0.0.0
                PORT: '{{ .Values.service.metrics.ports.metrics.port }}'
                URL: '{{ printf "http://%v:%v" (include "tc.v1.common.lib.chart.names.fullname" $) .Values.service.main.ports.main.port }}'
              imageSelector: exportarrImage
              primary: true
              probes:
                liveness:
                  enabled: true
                  path: /healthz
                  port: '{{ .Values.service.metrics.ports.metrics.port }}'
                  type: http
                readiness:
                  enabled: true
                  path: /healthz
                  port: '{{ .Values.service.metrics.ports.metrics.port }}'
                  type: http
                startup:
                  enabled: true
                  path: /healthz
                  port: '{{ .Values.service.metrics.ports.metrics.port }}'
                  type: http
        replicas: 1
        strategy: RollingUpdate
        type: Deployment
      main:
        podSpec:
          containers:
            main:
              env:
                SABNZBD__HOST_WHITELIST_ENTRIES: sabnzbd.${DOMAIN_0}
                SABNZBD__PORT: '{{ .Values.service.main.ports.main.port }}'
        replicas: 1
        type: Deployment
