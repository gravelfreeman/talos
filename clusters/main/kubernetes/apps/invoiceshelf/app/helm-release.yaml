apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: invoiceshelf
  namespace: invoiceshelf
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 14.5.3
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
  timeout: 20m
  maxHistory: 3
  driftDetection:
    mode: warn
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    TZ: America/Montreal
    global:
      stopAll: false

    image:
      repository: invoiceshelf/invoiceshelf
      pullPolicy: IfNotPresent
      tag: latest@sha256:b0deaff96c100d3e0c688486a38b0d488e7936b4d75c1c2847e4cf72c2b086a8

    opensshImage:
      repository: ghcr.io/linuxserver/openssh-server
      pullPolicy: IfNotPresent
      tag: latest
    
    securityContext:
      container:
        readOnlyRootFilesystem: false
        runAsNonRoot: false
        runAsUser: 0
        runAsGroup: 0

    credentials:
      backblaze:
        type: s3
        url: ${BUCKET_URL}
        bucket: ${BUCKET_NAME}
        accessKey: ${BUCKET_ACCESSKEY}
        secretKey: ${BUCKET_SECRETKEY}
        encrKey: ${BUCKET_ENCRKEY}

    cnpg:
      main:
        enabled: true
        cluster:
          singleNode: true
        mode: recovery
        database: invoiceshelf
        user: invoiceshelf
        password: ${CNPG_PASSWORD_INVOICESHELF}
        backups:
          enabled: true
          revision: "1"
          credentials: backblaze
        recovery:
          credentials: backblaze

    service:
      main:
        ports:
          main:
            port: 9090
            targetPort: 80
          openssh:
            enabled: true
            protocol: tcp
            port: 22
            targetPort: 2222
            targetSelector: openssh

    ingress:
      main:
        enabled: true
        integrations:
          traefik:
            enabled: true
            middlewares:
              - name: auth
                namespace: traefik
        tls:
          - hosts:
            - client.${DOMAIN_0}
            clusterIssuer: domain-0-wildcard
        hosts:
          - host: client.${DOMAIN_0}

    persistence:
      config:
        enabled: true
        type: pvc
        targetSelector:
          main:
            main:
              mountPath: /conf
        volsync:
          - name: cfg
            type: restic
            cleanupCachePVC: true
            credentials: backblaze
            dest:
              enabled: true
            src:
              enabled: false
              trigger:
                schedule: 0 3 * * *
      data:
        enabled: true
        type: pvc
        mountPath: /data
        targetSelectAll: true
        volsync:
          - name: dat
            type: restic
            cleanupCachePVC: true
            credentials: backblaze
            dest:
              enabled: true
            src:
              enabled: false
              trigger:
                schedule: 0 3 * * *
      modules:
        enabled: true
        type: pvc
        mountPath: /var/www/html/InvoiceShelf/Modules
        targetSelectAll: true
        volsync:
          - name: mod
            type: restic
            cleanupCachePVC: true
            credentials: backblaze
            dest:
              enabled: true
            src:
              enabled: false
              trigger:
                schedule: 0 3 * * *
      openssh:
        enabled: true
        type: pvc
        targetSelector:
          main:
            openssh:
              mountPath: /config

    workload:
      main:
        podSpec:
          containers:
            main:
              lifecycle:
                postStart:
                  type: exec
                  command:
                    - /bin/sh
                    - -c
                    - |
                      mkdir -p /run/php
                      chown www-data:www-data /run/php
              env:
                PHP_TZ: America/Montreal
                TIMEZONE: America/Montreal
                APP_NAME: Freeman
                APP_ENV: local
                APP_DEBUG: false
                APP_URL: https://client.${DOMAIN_0}
                APP_LOCALE: fr
                DB_CONNECTION: pgsql
                DB_HOST: invoiceshelf-app-template-cnpg-main-rw
                DB_PORT: 5432
                DB_DATABASE: invoiceshelf
                DB_USERNAME: invoiceshelf
                DB_PASSWORD: ${CNPG_PASSWORD_INVOICESHELF}
                CACHE_STORE: file
                SESSION_DRIVER: file
                SESSION_LIFETIME: 120
                SESSION_ENCRYPT: true
                SESSION_PATH: /
                SESSION_DOMAIN: client.${DOMAIN_0}
                SANCTUM_STATEFUL_DOMAINS: client.${DOMAIN_0}
                STARTUP_DELAY: 0
                MAIL_DRIVER: smtp
                MAIL_HOST: ${SMTP_HOST_0}
                MAIL_PORT: 587
                MAIL_USERNAME: ${SMTP_USERNAME_0}
                MAIL_PASSWORD: ${SMTP_PASSWORD_INVOICESHELF}
                MAIL_ENCRYPTION: tls
                MAIL_FROM_NAME: ${SMTP_NAME_INVOICESHELF}
                MAIL_FROM_ADDRESS: ${SMTP_FROM_INVOICESHELF}
            openssh:
              enabled: true
              primary: false
              name: openssh
              imageSelector: opensshImage
              env:
                LOG_STDOUT: true
                USER_NAME: ${USER_1}
                PASSWORD_ACCESS: false
                SUDO_ACCESS: true
                PUBLIC_KEY: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIATd5+Lcjz0RK9tkwjl0poFti50RqOevT1gAAY9PLZOs"
              lifecycle:
                postStart:
                  type: exec
                  command:
                    - /bin/sh
                    - -c
                    - |
                      chmod 0400 /config/ssh_host_keys/ssh_host_ecdsa_key
                      chmod 0400 /config/ssh_host_keys/ssh_host_ed25519_key
                      chmod 0400 /config/ssh_host_keys/ssh_host_rsa_key
                      apk add nodejs npm
                      echo "HOME=/config" > /config/.ssh/environment
                      chmod 600 /config/.ssh/environment
                      sed -i 's/^#\?MaxAuthTries[[:space:]]\+[0-9]\+/MaxAuthTries 100/' /config/sshd/sshd_config
                      sed -i 's/^PermitUserEnvironment[[:space:]]\+no/PermitUserEnvironment yes/' /config/sshd/sshd_config
                      sed -i 's/^#\?PermitTunnel[[:space:]]\+no/PermitTunnel yes/' /config/sshd/sshd_config
              probes:
                liveness:
                  enabled: false
                readiness:
                  enabled: false
                startup:
                  enabled: true
                  type: "{{ .Values.service.main.ports.openssh.protocol }}"
                  port: "{{ $.Values.service.main.ports.openssh.targetPort | default .Values.service.main.ports.openssh.port }}"