apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: immich
  namespace: immich
spec:
  interval: 15m
  chart:
    spec:
      chart: immich
      version: 15.13.9
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
  values:
    cnpg:
      main:
        backups:
          credentials: backblaze
          enabled: true
        cluster:
          initdb:
            postInitApplicationSQL:
              - CREATE EXTENSION IF NOT EXISTS cube;
              - CREATE EXTENSION IF NOT EXISTS earthdistance;
              - CREATE SCHEMA IF NOT EXISTS vectors;
              - ALTER DATABASE immich SET search_path TO "immich", public, vectors;
              - SET search_path TO "immich", public, vectors;
              - GRANT SELECT ON TABLE pg_vector_index_stat TO PUBLIC;
              - ALTER SCHEMA vectors OWNER TO immich;
          instances: 1
          singleNode: true
        database: immich
        enabled: true
        monitoring:
          disableDefaultQueries: false
          enablePodMonitor: true
        password: CNPG_PASSWORD_IMMICH
        pgVersion: 16
        type: vectors
        user: immich
    credentials:
      backblaze:
        accessKey: ${BUCKET_ACCESSKEY}
        bucket: ${BUCKET_NAME}
        encrKey: ${BUCKET_ENCRKEY}
        name: backblaze
        path: ""
        secretKey: ${BUCKET_SECRETKEY}
        type: s3
        url: ${BUCKET_URL}
    immich:
      enable_ml: true
      enable_typesense: true
      log_level: log
      mlImageType: mlImage
  ingress:
    main:
      enabled: true
      integrations:
        traefik:
          enabled: true
        middlewares:
          - name: auth
      tls:
        - hosts:
          - photos.${DOMAIN_0}
          clusterIssuer: domain-0-wildcard
      hosts:
        - host: photos.${DOMAIN_0}
          paths:
          - path: /
            pathType: Prefix
    persistence:
      library:
        enabled: true
        mountPath: /usr/src/app/upload/library
        volsync:
          - credentials: backblaze
            name: lib
            src:
              enabled: true
            type: restic
      profile:
        enabled: true
        mountPath: /usr/src/app/upload/profile
        volsync:
          - credentials: backblaze
            name: prf
            src:
              enabled: true
            type: restic
      thumbs:
        enabled: true
        mountPath: /usr/src/app/upload/thumbs
        volsync:
          - credentials: backblaze
            name: thn
            src:
              enabled: true
            type: restic
      uploads:
        enabled: true
        mountPath: /usr/src/app/upload/upload
        volsync:
          - credentials: backblaze
            name: upl
            src:
              enabled: true
            type: restic
      video:
        enabled: true
        mountPath: /usr/src/app/upload/encoded-video
        volsync:
          - credentials: backblaze
            name: vid
            src:
              enabled: true
            type: restic
      user10:
        enabled: true
        type: nfs
        mountPath: /usr/src/app/upload/library/${USER_10}
        path: ${DATASET_USERS}/${USER_10}/Photos
        server: ${NFS_SERVER_0}
      user11:
        enabled: true
        type: nfs
        mountPath: /usr/src/app/upload/library/${USER_11}
        path: ${DATASET_USERS}/${USER_11}/Photos
        server: ${NFS_SERVER_0}
    redis:
      enabled: true
      redisUsername: default
    resources:
      limits:
        cpu: 32000m
        memory: 64Gi
    securityContext:
      container:
        UMASK: "0022"
        runAsUser: 0
      pod:
        fsGroupChangePolicy: OnRootMismatch
    service:
      machinelearning:
        enabled: true
        ports:
          machinelearning:
            enabled: true
            port: 10003
            primary: true
            protocol: http
            targetSelector: machinelearning
        targetSelector: machinelearning
        type: ClusterIP
      main:
        enabled: true
        ports:
          main:
            port: 10323
            protocol: http
            targetSelector: main
        targetSelector: main
        type: ClusterIP
      microservices:
        enabled: true
        ports:
          microservices:
            enabled: true
            port: 10004
            primary: true
            protocol: http
            targetSelector: microservices
        targetSelector: microservices
        type: ClusterIP
    workload:
      main:
        replicas: 1
        type: Deployment